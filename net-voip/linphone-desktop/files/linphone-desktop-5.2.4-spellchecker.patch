--- ../linphone-app/ui/modules/Common/Form/DroppableTextArea.qml	2024-06-28 01:12:43.606580921 +0300
+++ ../linphone-app/ui/modules/Common/Form/DroppableTextArea.qml	2024-06-28 01:19:18.821763566 +0300
@@ -9,7 +9,6 @@
 import Units 1.0
 import Utils 1.0
 import UtilsCpp 1.0
-import Clipboard 1.0
 
 import 'qrc:/ui/scripts/Utils/utils.js' as Utils
 
@@ -186,7 +185,6 @@
 									clearDelay.restart()
 								}
 							}
-							spellChecker.highlightDocument()
 						}
 						function handleValidation () {
 							var plainText = getText(0, text.length)
@@ -216,46 +214,7 @@
 						height:flickableArea.height
 						//onHeightChanged: height=flickableArea.height//TextArea change its height from content text. Force it to parent
 						
-						property int previousFlickableAreaWidth
-						onWidthChanged: {
-							if (previousFlickableAreaWidth != flickableArea.width) {
-								spellChecker.clearHighlighting()
-								spellChecker.highlightDocument()
-							}
-							previousFlickableAreaWidth = flickableArea.width
-						}
-						
-						SpellChecker {
-							id: spellChecker
-    					}
-    					
-						SpellCheckerMenu {
-    						id: spellCheckerMenu
-    					}
-    					
-						Repeater {
-							id: spellCheckerUnderliner
-							model: spellChecker.redLines
-							Rectangle {
-								clip: true
-								height: parseFloat(modelData.split(',')[4])
-								x: textArea.leftPadding + parseFloat(modelData.split(',')[0])
-								y: textArea.topPadding + parseFloat(modelData.split(',')[1])-parseFloat(modelData.split(',')[5])
-								width: parseFloat(modelData.split(',')[2])
-								color: 'transparent'
-								Text {
-									anchors.top: parent.top
-									text: modelData.split(',')[3]
-									color: DroppableTextAreaStyle.spellChecker.underlineWave.colorModel.color
-								}
-							}
-						}
-    					
-						Component.onCompleted: {
-							forceActiveFocus()
-							spellChecker.setTextDocument(textDocument)
-							spellCheckerMenu.spellChecker = spellChecker
-						}
+						Component.onCompleted: forceActiveFocus()
 						
 						property var isAutoRepeating : false // shutdown repeating key feature to let optional menu appears and do normal stuff (like accents menu)
 						Keys.onReleased: {
@@ -264,9 +223,7 @@
 									if(event.key > Qt.Key_Any && event.key <= Qt.Key_ydiaeresis)// Remove the previous character if it is a printable character
 										textArea.remove(cursorPosition-1, cursorPosition)
 								}
-							} else if (event.matches(StandardKey.Paste)) {
-									Clipboard.restore()
-							} else
+							}else
 								isAutoRepeating = false// We are no more repeating. Final decision is done on Releasing
 							droppableTextArea.composing()
 						}
@@ -280,23 +237,6 @@
 							} else if (event.key === Qt.Key_Return || event.key === Qt.Key_Enter) {
 								handleValidation()
 								event.accepted = true
-							} else if (event.matches(StandardKey.Paste)) {
-								Clipboard.backup() // Restored on Keys.onReleased
-								Clipboard.text = Clipboard.getChatFormattedText()
-								event.accepted = false
-							}
-						}
-						onPressed: {
-							if (event.button == Qt.RightButton) {
-								var wordPosition = spellChecker.wordPosition(event.x,event.y)
-								if (wordPosition != -1) {
-									var wordValid = spellChecker.isWordAtPositionValid(wordPosition)
-									if (!wordValid) {
-										cursorPosition = wordPosition
-										selectWord()
-										spellCheckerMenu.open(selectedText,wordPosition)
-									}
-								}
 							}
 							droppableTextArea.composing()
 						}
