--- ../src/gevent/tests/test__server.py	2025-10-18 21:56:41.795051049 +0300
+++ ../src/gevent/tests/test__server.py	2025-10-18 22:01:27.455008701 +0300
@@ -322,6 +322,7 @@
 
     @greentest.skipOnLibuvOnCIOnPyPy("Sometimes times out")
     @greentest.skipOnAppVeyor("Sometimes times out.")
+    @unittest.skip("AssertionError: 32 not found in (111, 99, 104, 103)")
     def test_backlog_is_accepted_for_address(self):
         self.server = self.ServerSubClass((greentest.DEFAULT_BIND_ADDR, 0), backlog=25)
         self.assertConnectionRefused()
--- ../src/gevent/tests/test__socket.py.org	2025-10-18 22:13:02.913248550 +0300
+++ ../src/gevent/tests/test__socket.py	2025-10-18 22:14:24.422823473 +0300
@@ -501,6 +501,7 @@
 
     __timeout__ = LARGE_TIMEOUT
 
+    @unittest.skip("Address family not supported by protocol")
     def test_refuses(self, **conn_args):
         connect_port = support.find_unused_port()
 
@@ -524,6 +525,7 @@
                 **conn_args
             )
 
+    @unittest.skip("Address family not supported by protocol")
     def test_refuses_from_port(self):
         source_port = support.find_unused_port()
         # Usually we don't want to bind/connect to '', but
--- ../src/gevent/tests/test__core_timer.py	2025-10-18 23:56:53.155981961 +0300
+++ ../src/gevent/tests/test__core_timer.py	2025-10-18 23:57:47.344924393 +0300
@@ -1,6 +1,7 @@
 from __future__ import print_function
 from gevent import config
 
+import unittest
 import gevent.testing as greentest
 from gevent.testing import TestCase
 from gevent.testing import LARGE_TIMEOUT
@@ -94,6 +95,7 @@
     # On CI, with *all* backends, sometimes we get timer values of
     # 0.02 or higher.
     @reraises_flaky_timeout(AssertionError)
+    @unittest.skip("FlakyAssertionError: False is not true")
     def test_resolution(self): # pylint:disable=too-many-locals
         # Make sure that having an active IO watcher
         # doesn't badly throw off our timer resolution.
