From f7c3b88e1989df250b62bb1a8595c422043bea45 Mon Sep 17 00:00:00 2001
From: Mark Karpov <markkarpov92@gmail.com>
Date: Thu, 17 Aug 2023 21:35:03 +0200
Subject: [PATCH] Fix the test suite

---
 httpbun-tests/Network/HTTP/ReqSpec.hs | 55 +++++++++++++++++----------
 1 file changed, 35 insertions(+), 20 deletions(-)

diff --git a/httpbun-tests/Network/HTTP/ReqSpec.hs b/httpbun-tests/Network/HTTP/ReqSpec.hs
index 97e4e09..3d81a1d 100644
--- a/httpbun-tests/Network/HTTP/ReqSpec.hs
+++ b/httpbun-tests/Network/HTTP/ReqSpec.hs
@@ -1,5 +1,6 @@
 {-# LANGUAGE DataKinds #-}
 {-# LANGUAGE FlexibleInstances #-}
+{-# LANGUAGE LambdaCase #-}
 {-# LANGUAGE OverloadedStrings #-}
 {-# LANGUAGE RankNTypes #-}
 {-# OPTIONS_GHC -fno-warn-orphans #-}
@@ -77,14 +78,11 @@ spec = do
           NoReqBody
           jsonResponse
           (header "Foo" "bar" <> header "Baz" "quux")
-      stripFunnyHeaders (responseBody r)
+      stripFunnyHeaders' (responseBody r)
         `shouldBe` object
-          [ "headers"
-              .= object
-                [ "Accept-Encoding" .= ("gzip" :: Text),
-                  "Foo" .= ("bar" :: Text),
-                  "Baz" .= ("quux" :: Text)
-                ]
+          [ "Accept-Encoding" .= ("gzip" :: Text),
+            "Foo" .= ("bar" :: Text),
+            "Baz" .= ("quux" :: Text)
           ]
       responseStatusCode r `shouldBe` 200
       responseStatusMessage r `shouldBe` "OK"
@@ -383,19 +381,36 @@ stripOrigin value = value
 
 -- | Remove funny headers that might break the tests.
 stripFunnyHeaders :: Value -> Value
-stripFunnyHeaders (Object m) =
-  let f (Object p) = Object $ Aeson.KeyMap.filterWithKey (\k _ -> k `elem` hs) p
-      f value = value
-      hs =
-        [ "Content-Type",
-          "Accept-Encoding",
-          "Host",
-          "Content-Length",
-          "Foo",
-          "Baz"
-        ]
-   in Object (runIdentity (Aeson.KeyMap.alterF (pure . fmap f) "headers" m))
-stripFunnyHeaders value = value
+stripFunnyHeaders = \case
+  Object m ->
+    Object
+      ( runIdentity
+          ( Aeson.KeyMap.alterF
+              (pure . fmap stripFunnyHeaders')
+              "headers"
+              m
+          )
+      )
+  value -> value
+
+-- | Similar to 'stripFunnyHeaders', but acts directly on the argument
+-- without trying to access its "headers" field.
+stripFunnyHeaders' :: Value -> Value
+stripFunnyHeaders' = \case
+  Object p ->
+    Object $
+      Aeson.KeyMap.filterWithKey
+        (\k _ -> k `elem` whitelistedHeaders)
+        p
+  value -> value
+  where
+    whitelistedHeaders =
+      [ "Content-Type",
+        "Accept-Encoding",
+        "Content-Length",
+        "Foo",
+        "Baz"
+      ]
 
 -- | This is a complete test case that makes use of <https://httpbun.org> to
 -- get various response status codes.
